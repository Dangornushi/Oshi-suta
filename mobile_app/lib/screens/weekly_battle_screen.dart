import 'package:flutter/material.dart';
import '../widgets/custom_card.dart';
import '../widgets/custom_progress.dart';
import '../widgets/custom_badge.dart';

class WeeklyBattleScreen extends StatefulWidget {
  const WeeklyBattleScreen({Key? key}) : super(key: key);

  @override
  State<WeeklyBattleScreen> createState() => _WeeklyBattleScreenState();
}

class _WeeklyBattleScreenState extends State<WeeklyBattleScreen>
    with SingleTickerProviderStateMixin {
  late TabController _tabController;

  @override
  void initState() {
    super.initState();
    _tabController = TabController(length: 2, vsync: this);
  }

  @override
  void dispose() {
    _tabController.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: SafeArea(
        child: Column(
          children: [
            const SizedBox(height: 16),
            // Header
            const Text(
              '„Ç¶„Ç£„Éº„ÇØ„É™„Éº„Éê„Éà„É´',
              style: TextStyle(
                fontSize: 24,
                fontWeight: FontWeight.bold,
              ),
            ),
            const SizedBox(height: 8),
            const Text(
              'ÈÄ±Êú´„ÅÆÁÜ±ÁãÇ„Çí„ÄÅÂøúÊè¥Âäõ„Å´„ÄÇ',
              style: TextStyle(
                fontSize: 14,
                color: Colors.grey,
              ),
            ),
            const SizedBox(height: 16),

            // Tab Bar
            Container(
              margin: const EdgeInsets.symmetric(horizontal: 16),
              decoration: BoxDecoration(
                color: Colors.grey.shade200,
                borderRadius: BorderRadius.circular(8),
              ),
              child: TabBar(
                controller: _tabController,
                indicator: BoxDecoration(
                  color: Colors.white,
                  borderRadius: BorderRadius.circular(8),
                ),
                labelColor: Colors.black,
                unselectedLabelColor: Colors.grey,
                tabs: const [
                  Tab(text: '‰ªäÈÄ±„ÅÆ„Éê„Éà„É´'),
                  Tab(text: 'ÈÅéÂéª„ÅÆÊà¶Á∏æ'),
                ],
              ),
            ),
            const SizedBox(height: 16),

            // Tab Content
            Expanded(
              child: TabBarView(
                controller: _tabController,
                children: [
                  _buildCurrentBattle(),
                  _buildHistory(),
                ],
              ),
            ),
          ],
        ),
      ),
    );
  }

  Widget _buildCurrentBattle() {
    return SingleChildScrollView(
      child: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            // Battle Status
            CustomCard(
              gradient: const LinearGradient(
                colors: [Color(0xFFFFF3E0), Color(0xFFFFE0B2)],
                begin: Alignment.topLeft,
                end: Alignment.bottomRight,
              ),
              border: Border.all(color: const Color(0xFFFFCDD2), width: 2),
              child: Column(
                children: [
                  Row(
                    mainAxisAlignment: MainAxisAlignment.center,
                    children: const [
                      Icon(Icons.local_fire_department,
                          color: Color(0xFFD32F2F), size: 20),
                      SizedBox(width: 8),
                      Text(
                        '„Éê„Éà„É´ÈÄ≤Ë°å‰∏≠',
                        style: TextStyle(
                          color: Color(0xFFD32F2F),
                          fontWeight: FontWeight.bold,
                        ),
                      ),
                      SizedBox(width: 8),
                      Icon(Icons.local_fire_department,
                          color: Color(0xFFD32F2F), size: 20),
                    ],
                  ),
                  const SizedBox(height: 24),
                  Row(
                    mainAxisAlignment: MainAxisAlignment.spaceAround,
                    children: [
                      _buildTeam('üî¥', 'Êµ¶Âíå„É¨„ÉÉ„Ç∫', '12,847'),
                      Column(
                        children: [
                          const Text(
                            'VS',
                            style: TextStyle(
                              fontSize: 16,
                              color: Colors.grey,
                            ),
                          ),
                          const SizedBox(height: 8),
                          CustomBadge(
                            variant: BadgeVariant.outline,
                            child: Row(
                              mainAxisSize: MainAxisSize.min,
                              children: const [
                                Icon(Icons.timer, size: 12),
                                SizedBox(width: 4),
                                Text('2Êó•14ÊôÇÈñì', style: TextStyle(fontSize: 11)),
                              ],
                            ),
                          ),
                        ],
                      ),
                      _buildTeam('ü¶å', 'ÈπøÂ≥∂„Ç¢„É≥„Éà„É©„Éº„Ç∫', '11,923'),
                    ],
                  ),
                  const SizedBox(height: 16),
                  const Text(
                    'ÂÆüÈöõ„ÅÆË©¶Âêà: 2025/10/25 (Âúü) 14:00',
                    style: TextStyle(
                      fontSize: 13,
                      color: Colors.grey,
                    ),
                  ),
                ],
              ),
            ),
            const SizedBox(height: 16),

            // My Contribution
            CustomCard(
              gradient: const LinearGradient(
                colors: [Color(0xFF1976D2), Color(0xFF1565C0)],
                begin: Alignment.topLeft,
                end: Alignment.bottomRight,
              ),
              child: Row(
                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                children: [
                  const Column(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      Text(
                        '„ÅÇ„Å™„Åü„ÅÆË≤¢ÁåÆÂ∫¶',
                        style: TextStyle(
                          fontSize: 13,
                          color: Color(0xFFBBDEFB),
                        ),
                      ),
                      SizedBox(height: 4),
                      Text(
                        '1,847pt',
                        style: TextStyle(
                          fontSize: 24,
                          fontWeight: FontWeight.bold,
                          color: Colors.white,
                        ),
                      ),
                    ],
                  ),
                  Column(
                    crossAxisAlignment: CrossAxisAlignment.end,
                    children: [
                      const Text(
                        'È†Ü‰Ωç',
                        style: TextStyle(
                          fontSize: 13,
                          color: Color(0xFFBBDEFB),
                        ),
                      ),
                      const SizedBox(height: 4),
                      RichText(
                        text: const TextSpan(
                          children: [
                            TextSpan(
                              text: '127‰Ωç',
                              style: TextStyle(
                                fontSize: 24,
                                fontWeight: FontWeight.bold,
                                color: Colors.white,
                              ),
                            ),
                            TextSpan(
                              text: '/8,456‰∫∫',
                              style: TextStyle(
                                fontSize: 13,
                                color: Color(0xFFBBDEFB),
                              ),
                            ),
                          ],
                        ),
                      ),
                    ],
                  ),
                ],
              ),
            ),
            const SizedBox(height: 24),

            // Missions
            const Text(
              'ÈÅ∏Êâã„Ç∑„É≥„ÇØ„É≠„Éü„ÉÉ„Ç∑„Éß„É≥',
              style: TextStyle(
                fontSize: 18,
                fontWeight: FontWeight.bold,
              ),
            ),
            const SizedBox(height: 12),
            _buildMission(
              icon: Icons.directions_walk,
              iconColor: const Color(0xFF2196F3),
              iconBgColor: const Color(0xFFE3F2FD),
              title: 'Ëµ∞Ë°åË∑ùÈõ¢„ÉÅ„É£„É¨„É≥„Ç∏',
              player: 'ËààÊ¢†ÊÖé‰∏â',
              playerNumber: 9,
              description: '„ÉÅ„Éº„É†„ÅÆ"Ê±ó„Åã„ÅçÂΩπ"„ÅÆ„Çà„ÅÜ„Å´„ÄÅÈÄ±Êú´„Åæ„Åß„ÅÆÁ∑èËµ∞Ë°åË∑ùÈõ¢„ÇíÁ´∂„ÅÜ',
              current: 18.5,
              target: 30,
              unit: 'km',
              points: 500,
              difficulty: '‰∏≠',
            ),
            const SizedBox(height: 12),
            _buildMission(
              icon: Icons.flash_on,
              iconColor: const Color(0xFFFBC02D),
              iconBgColor: const Color(0xFFFFF9C4),
              title: '„Éö„Éº„Çπ„Ç≥„É≥„Éà„É≠„Éº„É´',
              player: '„Éõ„Çª„Éª„Ç´„É≥„ÉÜ',
              playerNumber: 10,
              description: '1km„Çí5ÂàÜ„Éö„Éº„Çπ„ÅßËµ∞„Çã„Éü„ÉÉ„Ç∑„Éß„É≥„ÅÆÊàêÂäüÂõûÊï∞',
              current: 3,
              target: 7,
              unit: 'Âõû',
              points: 700,
              difficulty: 'È´ò',
            ),
            const SizedBox(height: 12),
            _buildMission(
              icon: Icons.shield,
              iconColor: const Color(0xFF4CAF50),
              iconBgColor: const Color(0xFFE8F5E9),
              title: 'Á∂ôÁ∂öÁéá„ÉÅ„É£„É¨„É≥„Ç∏',
              player: 'Ë•øÂ∑ùÂë®‰Ωú',
              playerNumber: 1,
              description: 'ÈâÑÂ£Å„ÅÆÂÆàË≠∑Á•û„ÅÆ„Çà„ÅÜ„Å´„ÄÅÊó•„ÄÖ„ÅÆÈÅãÂãï„ÅÆÁ∂ôÁ∂öÁéá„ÅßÁ´∂„ÅÜ',
              current: 5,
              target: 7,
              unit: 'Êó•',
              points: 600,
              difficulty: '‰∏≠',
            ),
          ],
        ),
      ),
    );
  }

  Widget _buildHistory() {
    return SingleChildScrollView(
      child: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            const Text(
              'ÈÅéÂéª„ÅÆ„Éê„Éà„É´Êà¶Á∏æ',
              style: TextStyle(
                fontSize: 18,
                fontWeight: FontWeight.bold,
              ),
            ),
            const SizedBox(height: 12),
            _buildHistoryCard(
              round: 'J1 Á¨¨29ÁØÄ',
              opponent: 'Ê®™ÊµúF„Éª„Éû„É™„Éé„Çπ',
              opponentLogo: '‚öì',
              result: 'ÂãùÂà©',
              score: '14523 - 13891',
              realResult: 'ÂÆüÊà¶: 2-1 (Âãù)',
              isWin: true,
            ),
            const SizedBox(height: 12),
            _buildHistoryCard(
              round: 'J1 Á¨¨28ÁØÄ',
              opponent: 'Â∑ùÂ¥é„Éï„É≠„É≥„Çø„Éº„É¨',
              opponentLogo: 'üåä',
              result: 'ÊïóÂåó',
              score: '11234 - 15678',
              realResult: 'ÂÆüÊà¶: 1-3 (Êïó)',
              isWin: false,
            ),
          ],
        ),
      ),
    );
  }

  Widget _buildTeam(String logo, String name, String score) {
    return Column(
      children: [
        Text(logo, style: const TextStyle(fontSize: 40)),
        const SizedBox(height: 8),
        Text(
          name,
          style: const TextStyle(
            fontSize: 14,
            fontWeight: FontWeight.bold,
          ),
        ),
        const SizedBox(height: 4),
        Text(
          score,
          style: const TextStyle(
            fontSize: 20,
            fontWeight: FontWeight.bold,
          ),
        ),
      ],
    );
  }

  Widget _buildMission({
    required IconData icon,
    required Color iconColor,
    required Color iconBgColor,
    required String title,
    required String player,
    required int playerNumber,
    required String description,
    required double current,
    required double target,
    required String unit,
    required int points,
    required String difficulty,
  }) {
    return CustomCard(
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Row(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Container(
                padding: const EdgeInsets.all(12),
                decoration: BoxDecoration(
                  color: iconBgColor,
                  borderRadius: BorderRadius.circular(8),
                ),
                child: Icon(icon, color: iconColor, size: 24),
              ),
              const SizedBox(width: 16),
              Expanded(
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    Row(
                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                      children: [
                        Expanded(
                          child: Text(
                            title,
                            style: const TextStyle(
                              fontSize: 16,
                              fontWeight: FontWeight.bold,
                            ),
                          ),
                        ),
                        CustomBadge(
                          text: difficulty,
                          variant: BadgeVariant.outline,
                          borderColor: difficulty == 'È´ò'
                              ? Colors.red.shade300
                              : Colors.blue.shade300,
                          textColor: difficulty == 'È´ò'
                              ? Colors.red.shade600
                              : Colors.blue.shade600,
                          fontSize: 11,
                          padding: const EdgeInsets.symmetric(
                              horizontal: 8, vertical: 4),
                        ),
                      ],
                    ),
                    const SizedBox(height: 4),
                    Text(
                      '#$playerNumber $player',
                      style: const TextStyle(
                        fontSize: 13,
                        color: Colors.grey,
                      ),
                    ),
                  ],
                ),
              ),
            ],
          ),
          const SizedBox(height: 12),
          Text(
            description,
            style: const TextStyle(fontSize: 13, color: Colors.grey),
          ),
          const SizedBox(height: 12),
          Row(
            mainAxisAlignment: MainAxisAlignment.spaceBetween,
            children: [
              Text(
                '$current / $target $unit',
                style: const TextStyle(fontSize: 13),
              ),
              Text(
                '+${points}pt',
                style: const TextStyle(
                  fontSize: 13,
                  color: Color(0xFF4CAF50),
                ),
              ),
            ],
          ),
          const SizedBox(height: 8),
          CustomProgress(
            value: (current / target) * 100,
            height: 8,
          ),
        ],
      ),
    );
  }

  Widget _buildHistoryCard({
    required String round,
    required String opponent,
    required String opponentLogo,
    required String result,
    required String score,
    required String realResult,
    required bool isWin,
  }) {
    return CustomCard(
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Row(
            mainAxisAlignment: MainAxisAlignment.spaceBetween,
            children: [
              Text(
                round,
                style: const TextStyle(fontSize: 13, color: Colors.grey),
              ),
              CustomBadge(
                text: result,
                backgroundColor: isWin ? const Color(0xFF4CAF50) : Colors.red,
                fontSize: 11,
                padding:
                    const EdgeInsets.symmetric(horizontal: 8, vertical: 4),
              ),
            ],
          ),
          const SizedBox(height: 12),
          Row(
            mainAxisAlignment: MainAxisAlignment.spaceBetween,
            children: [
              const Row(
                children: [
                  Text('üî¥', style: TextStyle(fontSize: 24)),
                  SizedBox(width: 8),
                  Text('Êµ¶Âíå„É¨„ÉÉ„Ç∫'),
                ],
              ),
              const Text('VS', style: TextStyle(color: Colors.grey)),
              Row(
                children: [
                  Text(opponent),
                  const SizedBox(width: 8),
                  Text(opponentLogo, style: const TextStyle(fontSize: 24)),
                ],
              ),
            ],
          ),
          const SizedBox(height: 8),
          Center(
            child: Text(
              'ÂøúÊè¥Âäõ: $score',
              style: const TextStyle(fontSize: 13, color: Colors.grey),
            ),
          ),
          const SizedBox(height: 4),
          Center(
            child: Text(
              realResult,
              style: TextStyle(fontSize: 12, color: Colors.grey.shade600),
            ),
          ),
        ],
      ),
    );
  }
}
